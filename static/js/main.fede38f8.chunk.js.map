{"version":3,"sources":["components/Header.js","components/Card.js","utils/api.js","components/Main.js","components/Footer.js","components/PopupWithForm.js","components/ImagePopup.js","components/App.js","serviceWorker.js","index.js","images/logo.svg"],"names":["Header","className","src","logoPath","alt","Card","props","cardStyle","backgroundImage","card","link","style","onClick","onCardClick","type","name","likes","length","api","options","this","fetch","baseUrl","headers","then","res","ok","json","Promise","reject","status","catch","err","about","method","body","JSON","stringify","id","avatar","authorization","Main","React","useState","userName","setUserName","userDescription","setUserDescription","userAvatar","setUserAvatar","cards","setCards","useEffect","getAboutProfile","userData","getInitialCards","cardData","imageStyle","onEditAvatar","onEditProfile","onAddPlace","map","i","key","Footer","PopupWithForm","isOpen","noValidate","onClose","title","children","buttonText","ImagePopup","App","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","selectedCard","setSelectedCard","closeAllPopups","undefined","placeholder","minLength","maxLength","required","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","console","message","module","exports"],"mappings":"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","file":"static/js/main.fede38f8.chunk.js","sourcesContent":["import React from 'react';\r\nimport logoPath from '../images/logo.svg';\r\n\r\nfunction Header() {\r\n  return (\r\n    <header className=\"header root__header\">\r\n      <img src={logoPath} alt=\"Логотип проекта Место\" className=\"logo\" />\r\n    </header>\r\n  )\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\n\r\nfunction Card(props) {\r\n  const cardStyle = {backgroundImage: `url(${props.card.link})`};\r\n\r\n  function handleClick() {\r\n    props.onCardClick(props.card);\r\n  }\r\n\r\n  return (\r\n    <li className=\"card\">\r\n      <div className=\"card__image\" style={cardStyle} onClick={handleClick}></div>\r\n      <button type=\"button\" className=\"button card__delete-btn\"></button>\r\n      <div className=\"card__description\">\r\n        <h2 className=\"card__title\">{props.card.name}</h2>\r\n        <div className=\"card__likes\">\r\n          <button type=\"button\" className=\"button card__like-btn\"></button>\r\n          <p className=\"card__like-count\">{props.card.likes.length}</p>\r\n        </div>\r\n      </div>\r\n    </li>\r\n  )\r\n}\r\n\r\nexport default Card;","class Api {\r\n  constructor(options) {\r\n    this.options = options;\r\n  }\r\n\r\n  getAboutProfile() {\r\n    return fetch(this.options.baseUrl + '/users/me/', {\r\n      headers: this.options.headers\r\n    })\r\n    .then(res => {\r\n      if (res.ok) {\r\n        return res.json();\r\n      }\r\n      return Promise.reject(`Данные о пользователе не загружены. Ошибка: ${res.status}`);\r\n    })\r\n    .catch((err) => {\r\n      return Promise.reject(err);\r\n    });\r\n  }\r\n\r\n  patchAboutProfile(name, about) {\r\n    return fetch(this.options.baseUrl + '/users/me/', {\r\n      method: 'PATCH',\r\n      headers: this.options.headers,\r\n      body: JSON.stringify({\r\n        name: name,\r\n        about: about\r\n      })\r\n    })\r\n    .then(res => {\r\n      if (res.ok) {\r\n        return res.json();\r\n      }\r\n      return Promise.reject(`Данные пользователя не сохранены. Ошибка: ${res.status}`);\r\n    })\r\n    .catch((err) => {\r\n      return Promise.reject(err);\r\n    });\r\n  }\r\n\r\n  getInitialCards() {\r\n    return fetch(this.options.baseUrl + '/cards/', {\r\n      headers: this.options.headers\r\n    })\r\n    .then(res => {\r\n      if (res.ok) {\r\n        return res.json();\r\n      }\r\n      return Promise.reject(`Карточки не загружены. Ошибка: ${res.status}`);\r\n    })\r\n    .catch((err) => {\r\n      return Promise.reject(err);\r\n    });\r\n  }\r\n\r\n  postNewCard(name, link) {\r\n    return fetch(this.options.baseUrl + '/cards', {\r\n      method: 'POST',\r\n      headers: this.options.headers,\r\n      body: JSON.stringify({\r\n        name: name,\r\n        link: link\r\n      })\r\n    })\r\n    .then(res => {\r\n      if (res.ok) {\r\n        return res.json();\r\n      }\r\n      return Promise.reject(`Новая карточка не добавлена. Ошибка: ${res.status}`);\r\n    })\r\n    .catch((err) => {\r\n      return Promise.reject(err);\r\n    });\r\n  }\r\n\r\n  deleteCard(id) {\r\n    return fetch(this.options.baseUrl + '/cards/' + id, {\r\n      method: 'DELETE',\r\n      headers: this.options.headers\r\n    })\r\n    .then(res => {\r\n      if (res.ok) {\r\n        return res.json();\r\n      }\r\n      return Promise.reject(`Карточка не удалена. Ошибка: ${res.status}`);\r\n    })\r\n    .catch((err) => {\r\n      return Promise.reject(err);\r\n    });\r\n  }\r\n\r\n  putLike(id) {\r\n    return fetch(this.options.baseUrl + '/cards/like/' + id, {\r\n      method: 'PUT',\r\n      headers: this.options.headers\r\n    })\r\n    .then(res => {\r\n      if (res.ok) {\r\n        return res.json();\r\n      }\r\n      return Promise.reject(`Не удалось поставить лайк. Ошибка: ${res.status}`);\r\n    })\r\n    .catch((err) => {\r\n      return Promise.reject(err);\r\n    });\r\n  }\r\n\r\n  deleteLike(id) {\r\n    return fetch(this.options.baseUrl + '/cards/like/' + id, {\r\n      method: 'DELETE',\r\n      headers: this.options.headers\r\n    })\r\n    .then(res => {\r\n      if (res.ok) {\r\n        return res.json();\r\n      }\r\n      return Promise.reject(`Не удалось снять лайк. Ошибка: ${res.status}`);\r\n    })\r\n    .catch((err) => {\r\n      return Promise.reject(err);\r\n    });\r\n  }\r\n\r\n  patchAvatar(avatar) {\r\n    return fetch(this.options.baseUrl + '/users/me/avatar', {\r\n      method: 'PATCH',\r\n      headers: this.options.headers,\r\n      body: JSON.stringify({\r\n        avatar: avatar\r\n      })\r\n    })\r\n    .then(res => {\r\n      if (res.ok) {\r\n        return res.json();\r\n      }\r\n      return Promise.reject(`Не удалось обновить аватарку. Ошибка: ${res.status}`);\r\n    })\r\n    .catch((err) => {\r\n      return Promise.reject(err);\r\n    });\r\n  }\r\n}\r\n\r\nconst api = new Api({\r\n  baseUrl: 'https://nomoreparties.co/cohort7',\r\n  headers: {\r\n    authorization: '5547747b-c129-4e77-93a7-481a2a2f0413',\r\n    'Content-Type': 'application/json'\r\n  }\r\n});\r\n\r\n\r\nexport default api;","import React from 'react';\r\nimport Card from './Card';\r\nimport api from '../utils/api';\r\n\r\nfunction Main(props) {\r\n  const [userName, setUserName] = React.useState('');\r\n  const [userDescription, setUserDescription] = React.useState('');\r\n  const [userAvatar, setUserAvatar] = React.useState();\r\n  const [cards, setCards] = React.useState([]);\r\n\r\n  React.useEffect(() => {\r\n    api.getAboutProfile().then((userData) => {\r\n      setUserName(userData.name);\r\n      setUserDescription(userData.about);\r\n      setUserAvatar(userData.avatar);\r\n    });\r\n\r\n    api.getInitialCards().then((cardData) => {\r\n      setCards(cardData);\r\n    });\r\n  }, []);\r\n\r\n  const imageStyle = { backgroundImage: `url(${userAvatar})` };\r\n\r\n\r\n\r\n  return (\r\n    <main className=\"content\">\r\n      <section className=\"profile root__profile\">\r\n        <div className=\"profile__image\" onClick={props.onEditAvatar} style={imageStyle}/>\r\n        <div className=\"profile__info\">\r\n          <h1 className=\"profile__name\">{userName}</h1>\r\n          <button className=\"button profile__edit-btn\" type=\"button\" onClick={props.onEditProfile}></button>\r\n          <p className=\"profile__job\">{userDescription}</p>\r\n        </div>\r\n        <button className=\"button profile__add-btn\" type=\"button\" onClick={props.onAddPlace}></button>\r\n      </section>\r\n      <section className=\"cards root__cards\">\r\n        <ul className=\"cards__list\">\r\n          {cards.map((card, i) => <Card key={i} card={card} onCardClick={props.onCardClick} />)}\r\n        </ul>\r\n      </section>\r\n    </main>\r\n  )\r\n}\r\n\r\nexport default Main;","import React from 'react';\r\n\r\nfunction Footer() {\r\n  return (\r\n    <footer className=\"footer root__footer\">\r\n      <p className=\"footer__copyright\">&#169; 2020 Mesto Russia</p>\r\n    </footer>\r\n  )\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\n\r\nfunction PopupWithForm(props) {\r\n  return (\r\n    <div className={`popup popup_type_${props.name} ${props.isOpen && \"popup_is-opened\"}`}>\r\n      <div className=\"popup__content\">\r\n        <form className=\"popup__form\" name={props.name} noValidate>\r\n          <button className=\"button popup__close-btn\" type=\"button\" onClick={props.onClose}></button>\r\n          <h3 className=\"popup__title\">{props.title}</h3>\r\n          {props.children}\r\n          <button className=\"button popup__button\">{props.buttonText}</button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default PopupWithForm;","import React from 'react';\r\n\r\nfunction ImagePopup(props) {\r\n  return(\r\n    <div className={`popup popup_type_image ${props.card && \"popup_is-opened\"}`}>\r\n      <div className=\"popup__content popup__content_content_image\">\r\n        <button className=\"button popup__close-btn\" type=\"button\" onClick={props.onClose}></button>\r\n        <img src={props.card ? props.card.link : ''} alt={props.card ? props.card.name : ''} className=\"popup__image\" />\r\n        <p className=\"popup__caption\">{props.card ? props.card.name : ''}</p>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ImagePopup;","import React from 'react';\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport PopupWithForm from './PopupWithForm';\nimport ImagePopup from './ImagePopup';\n\nfunction App() {\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false);\n  const [selectedCard, setSelectedCard] = React.useState();\n\n\n  function handleEditProfile() {\n    setIsEditProfilePopupOpen(true);\n  }\n\n  function handleAddPlace() {\n    setIsAddPlacePopupOpen(true);\n  }\n\n  function handleEditAvatar() {\n    setIsEditAvatarPopupOpen(true);\n  }\n\n  function handleCardClick(card) {\n    setSelectedCard(card);\n  }\n\n\n  function closeAllPopups() {\n    setIsEditProfilePopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setIsEditAvatarPopupOpen(false);\n    setSelectedCard(undefined);\n  }\n\n  return (\n    <div className=\"root\">\n      <Header />\n      <Main onEditProfile={handleEditProfile} onAddPlace={handleAddPlace} onEditAvatar={handleEditAvatar} onCardClick={handleCardClick} />\n      <Footer />\n\n      <PopupWithForm title=\"Редактировать профиль\" name=\"edit\" buttonText=\"Сохранить\" isOpen={isEditProfilePopupOpen} onClose={closeAllPopups}>\n        <label className=\"popup__label\">\n          <input\n            type=\"text\"\n            name=\"user-name\"\n            id=\"owner-name\"\n            className=\"popup__input popup__input_type_name\"\n            placeholder=\"Имя\"\n            minLength=\"2\"\n            maxLength=\"40\"\n            required />\n          <span className=\"popup__error\" id=\"owner-name-error\"></span>\n        </label>\n        <label className=\"popup__label\">\n          <input\n            type=\"text\"\n            name=\"user-description\"\n            id=\"owner-description\"\n            className=\"popup__input popup__input_type_description\"\n            placeholder=\"Занятие\"\n            minLength=\"2\"\n            maxLength=\"200\"\n            required />\n          <span className=\"popup__error\" id=\"owner-description-error\"></span>\n        </label>\n      </PopupWithForm>\n\n      <PopupWithForm title=\"Новое место\" name=\"place\" buttonText=\"Создать\" isOpen={isAddPlacePopupOpen} onClose={closeAllPopups}>\n        <label className=\"popup__label\">\n          <input\n            type=\"text\"\n            name=\"place-name\"\n            id=\"place-name\"\n            className=\"popup__input popup__input_type_place-name\"\n            placeholder=\"Название\"\n            minLength=\"2\"\n            maxLength=\"40\"\n            required />\n          <span className=\"popup__error\" id=\"place-name-error\"></span>\n        </label>\n        <label className=\"popup__label\">\n          <input\n            type=\"url\"\n            name=\"placeLink\"\n            id=\"place-link\"\n            className=\"popup__input popup__input_type_place-link\"\n            placeholder=\"Ссылка на картинку\"\n            minLength=\"2\"\n            maxLength=\"200\"\n            required />\n          <span className=\"popup__error\" id=\"place-link-error\"></span>\n        </label>\n      </PopupWithForm>\n\n      <PopupWithForm title=\"Обновить аватар\" name=\"avatar\" buttonText=\"Сохранить\" isOpen={isEditAvatarPopupOpen} onClose={closeAllPopups}>\n        <label className=\"popup__label\">\n          <input\n            type=\"url\"\n            name=\"avatar\"\n            id=\"avatar\"\n            className=\"popup__input popup__input_type_avatar\"\n            placeholder=\"Ссылка на аватар\"\n            minLength=\"2\"\n            maxLength=\"40\"\n            required />\n          <span className=\"popup__error\" id=\"avatar-error\"></span>\n        </label>\n      </PopupWithForm>\n\n      <ImagePopup card={selectedCard} onClose={closeAllPopups}/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.9d0e3a93.svg\";"],"sourceRoot":""}